package kwo;

import inet.nodes.ospfv2.OSPFRouter;
import inet.linklayer.ethernet.EtherHub;
import inet.networklayer.autorouting.ipv4.IPv4NetworkConfigurator;
import inet.nodes.inet.StandardHost;
import inet.nodes.ospfv2.OSPFRouter;
import inet.util.ThruputMeteringChannel;

@license(LGPL);

channel GBitLH extends ThruputMeteringChannel
{
    delay = 0.1us;
    datarate = 1Gbps;
    thruputDisplayFormat = "#N";
    @display("ls=red");
}

channel Funkverbindung extends ThruputMeteringChannel
{
    delay = 1ms;
    datarate = 50 Mbps;
    thruputDisplayFormat = "#N";
    @display("ls=yellow");
}

network distribution_grimsel_2
{
    submodules:

        gri2_A: OSPFRouter {
            parameters:
                @display("p=100,100");
            gates:
                ethg[8];
        }

        gri2_B: OSPFRouter {
            parameters:
                @display("p=250,100");
            gates:
                ethg[8];
        }

    connections:
        gri2_A.ethg++ <--> GbitLH <--> gri2_B.ethg++;
}

network core_leittechnik
{
    submodules:
        // Core-Switches
        coreSwitchGrimsel: OSPFRouter {
            parameters:
                @display("p=100,100");
            gates:
                ethg[8];
        }
        coreSwitchHandeck: OSPFRouter {
            parameters:
                @display("p=250,100");
            gates:
                ethg[8];
        }
        coreSwitchInnUST: OSPFRouter {
            parameters:
                @display("p=100,250");
            gates:
                ethg[8];
        }
        coreSwitchInnBG: OSPFRouter {
            parameters:
                @display("p=250,250");
            gates:
                ethg[8];
        }

    connections:
        coreSwitchGrimsel.ethg++ <--> GBitLH <--> coreSwitchInnUST.ethg++;
        coreSwitchGrimsel.ethg++ <--> GBitLH <--> coreSwitchHandeck.ethg++;
        coreSwitchGrimsel.ethg++ <--> Funkverbindung <--> coreSwitchInnBG.ethg++;
        coreSwitchHandeck.ethg++ <--> GBitLH <--> coreSwitchInnBG.ethg++;
        coreSwitchHandeck.ethg++ <--> GBitLH <--> coreSwitchInnUST.ethg++;
        coreSwitchInnUST.ethg++ <--> GBitLH <--> coreSwitchInnBG.ethg++;
}

network distribution_handeck
{
}

network distribution_handeck_2
{
}

network distribution_handeck_3
{
}

network distribution_innertkirchen
{
}

network access_innertkirchen
{
}

network access_innertkirchen_2
{
}

network access_innertkirchen_sa150
{
}

network access_vis
{
}

network access_gadmental
{
}

network access_grimsel_sa220
{
}

network access_grimsel
{
}

network access_grimsel_2
{
}

network access_handeck_2
{
}

network access_ust_sa16
{
}


