package kwo;

import inet.nodes.ospfv2.OSPFRouter;
import inet.util.ThruputMeteringChannel;


@license(LGPL);

channel GBitLH extends ThruputMeteringChannel
{
    delay = 0.1us;
    datarate = 1Gbps;
    thruputDisplayFormat = "#N";
    @display("ls=red");
}

channel GBitCo extends ThruputMeteringChannel
{
    delay = 1us;
    datarate = 1Gbps;
    thruputDisplayFormat = "#N";
    @display("ls=blue");
}

channel FunkVB extends ThruputMeteringChannel
{
    delay = 1ms;
    datarate = 50 Mbps;
    thruputDisplayFormat = "#N";
    @display("ls=yellow");
}

network leittechnicknetz_kwo
{
    submodules:
        // Distribution Networks
        distr_gri2: distribution_grimsel_2;
        distr_han:  distribution_handeck;
        
        // Core-Switches
        Core_Gri: OSPFRouter {
            parameters:
                @display("p=100,100");
            gates:
                ethg[8];
        }
        Core_Han: OSPFRouter {
            parameters:
                @display("p=250,100");
            gates:
                ethg[8];
        }
        Core_UST: OSPFRouter {
            parameters:
                @display("p=100,250");
            gates:
                ethg[8];
        }
        Core_BG: OSPFRouter {
            parameters:
                @display("p=250,250");
            gates:
                ethg[8];
        }

    connections:

        // Core mesh connections
        Core_Gri.ethg++ <--> GBitLH <--> Core_UST.ethg++;
        Core_Gri.ethg++ <--> GBitLH <--> Core_Han.ethg++;
        Core_Gri.ethg++ <--> FunkVB <--> Core_BG.ethg++;
        Core_Han.ethg++ <--> GBitLH <--> Core_BG.ethg++;
        Core_Han.ethg++ <--> GBitLH <--> Core_UST.ethg++;
        Core_UST.ethg++ <--> GBitLH <--> Core_BG.ethg++;

        // Connections to other network parts
        Core_Gri.ethg++ <--> GBitLH <--> distr_gri2.gri2b;
        Core_Han.ethg++ <--> GBitLH <--> distr_gri2.gri2a;
        Core_Gri.ethg++ <--> GBitCo <--> distr_han.disthanB;
        Core_Han.ethg++ <--> GBitCo <--> distr_han.disthanA;
}

module distribution_grimsel_2
{
    gates:
        inout gri2a;
        inout gri2b;

    submodules:
        gri2_A: OSPFRouter {
            parameters:
                @display("p=100,100");
            gates:
                ethg[8];
        }

        gri2_B: OSPFRouter {
            parameters:
                @display("p=250,100");
            gates:
                ethg[8];
        }

    connections:
        gri2_A.ethg++ <--> GBitLH <--> gri2_B.ethg++;
        gri2_A.ethg++ <--> GBitLH <--> gri2a;
        gri2_B.ethg++ <--> GBitLH <--> gri2b;
}


module distribution_handeck
{
}

module distribution_handeck_2
{
}

module distribution_handeck_3
{
}

module distribution_innertkirchen
{
}

module access_innertkirchen
{
}

module access_innertkirchen_2
{
}

module access_innertkirchen_sa150
{
}

module access_vis
{
}

module access_gadmental
{
}

module access_grimsel_sa220
{
}

module access_grimsel
{
}

module access_grimsel_2
{
}

module access_handeck_2
{
}

network access_ust_sa16
{
}


